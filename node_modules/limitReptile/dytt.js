"use strict";

// 依赖
const http = require('http');
const https = require('https');
const limit = require('limit');
const iconv = require('iconv-lite');
const cheerio = require('cheerio');

const reptile = {};
const MySql = limit.createMySql({
	database:'thetop'
});


function mockHeader(header){
	return limit.assign({
		'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'
	}, header);
};

// 虚拟请求头
function setConfig(config){
	let newConfig = limit.assign({
		protocol: 'http:',
		host: 'localhost',
		path: '/',
		method: 'GET',
		headers: {},
		timeout: 1
	}, config);
	if( newConfig.protocol === 'http:' ){
		newConfig.port = '80';
	}else{
		newConfig.port = '443';
	};
	return newConfig;
};



// // http://www.cnblogs.com/feichengwulai/articles/3653368.html
function get(path, host){
	return new Promise((s, j) => {
		let config = setConfig({
			protocol: 'http:',
			host: host,
			path: path,
			headers: mockHeader()
		});
		let httpMethod = config.protocol === 'http:' ? http : https;
		let req = httpMethod.request(config, (res) => {
			let statusCode = res.statusCode;
			// res.setEncoding('utf8');
			let rawData = [];
			res.on('data', (chunk) => rawData.push(chunk));
			res.on('end', () => {
				s(Buffer.concat(rawData));
		  	});
		});
		req.on('error', j);
		req.setTimeout(10000, () => {
	  		req.abort();
	  	});
		req.end();
	});
};

function encodeURIInGbk(name){
	let buffer = iconv.encode(name, 'gbk');
	let arr = Array.from(buffer);
	return arr.map((val) => {
		return `%${val.toString(16).toLocaleUpperCase()}`;
	}).join('');
};

function getHrefList(buf){
	let $ = cheerio.load(iconv.decode(buf, 'gbk'));
	let hrefList = $('.co_area2 table a').map((key, val) => {
		return $(val).attr('href');
	});
	return Array.from(hrefList);
};

function getBTaddress(buf){
	let $ = cheerio.load(iconv.decode(buf, 'gbk'));
	let href = $('#Zoom table a').attr('href');
	return href;
};

// 参考http://nodejs.lofter.com/post/3c14e_48aee
function testGbkToggleUtf(){
	// 一 GB:D2BB Unicode:4E00 UTF-8:E4 B8 80
	let gbkBuf = Buffer.from([0xD2,0xBB]);
	console.log(gbkBuf.toString('utf8'), 'utf8字符');
	console.log( iconv.decode(gbkBuf, 'gbk') );

	let utf8Buf = Buffer.from([0xE4, 0xB8, 0x80]);
	console.log( iconv.encode(utf8Buf, 'gbk'), 'utf8转义成GBKbuf' );
};

function loopList(list){
	console.log(list.length);
	let movie = list.shift();
	if( movie ){
		let name = movie.name;
		console.log(name);
		if( !name ){
			return loopList(list);
		};
		let id = movie.id;
		get(`/plus/search.php?keyword=${encodeURIInGbk(name)}`, 's.dydytt.net').then((buffer) => {
			return getHrefList(buffer);
		}).then((list) => {
			console.log('list', list);
			return Promise.all(list.map((val) => {
				return get(val, 'www.ygdy8.com');
			}));
		}).then((bufferList) => {
			return bufferList.map((buf) => {
				return getBTaddress(buf);
			});
		}).then((btList) => {
			console.log('btList', btList);
			if( btList.length ){
				return MySql.query(`update movie set thunder="${btList.join(',')}" where id=${id}`);
			}
		}).catch((e) => {limit.err(e)}).then(() => {
			return loopList(list);
		});
	}else{
		MySql.end();
	};
};

function reClearList(list){
	console.log(list.length);
	let movie = list.shift();
	if( movie && movie.thunder ){
		let {id, name, thunder} = movie;
		let REX = new RegExp(`\\.${name}\\.(HD|BD)`,'i');
		thunder = thunder.split(',').filter((val) => {
			if( REX.test(val) ){
				return true;
			}else{
				console.log(val, '|||',name);
				return false;
			};
		});
		MySql.query(`update movie set thunder="${thunder.join(',')}" where id=${id}`).then(() => {
			reClearList(list);
		});
	};
};

reptile.start = function(){
	let name = '流浪猫鲍勃';
	// MySql.query(`select * from movie where thunder=''`).then((list) => {
	// 	loopList(list);
	// });
	// 洗数据
	MySql.query(`select * from movie where thunder!=''`).then((list) => {
		reClearList(list);
	});
	// loopList(['一日情侣']);
	
};

module.exports = reptile;


























