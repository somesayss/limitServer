"use strict";

// 依赖
const http = require('http');
const https = require('https');
const limit = require('limit');
const fs = require('fs');

const reptile = {};


function mockHeader(header){
	return limit.assign({
		'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36'
	}, header);
};

// 虚拟请求头
function setConfig(config){
	let newConfig = limit.assign({
		protocol: 'http:',
		host: 'localhost',
		path: '/',
		method: 'GET',
		headers: {}
	}, config);
	if( newConfig.protocol === 'http:' ){
		newConfig.port = '80';
	}else{
		newConfig.port = '443';
	};
	return newConfig;
};

// http://www.cnblogs.com/feichengwulai/articles/3653368.html
function get(){
	let config = setConfig({
		protocol: 'http:',
		host: 'www.cnblogs.com',
		path: '/feichengwulai/articles/3653368.html',
		headers: mockHeader()
	});
	let httpMethod = config.protocol === 'http:' ? http : https;
	let req = httpMethod.request(config, (res) => {
		let statusCode = res.statusCode;
		// res.setEncoding('utf8');
		let rawData = '';
		res.on('data', (chunk) => rawData += chunk);
		res.on('end', () => {
			parseHtml(rawData);
	  	});
	})
	req.end();
};

function parseHtml(html){
	var str = html.match(/>(....)\s&nbsp;(....)\s/g).map((val) => {return val.replace('>','').replace(' &nbsp;', '|').replace(' ', '')}).join(',')
	fs.writeFile('./gbk.text', str);
};

reptile.start = get;

module.exports = reptile;


























