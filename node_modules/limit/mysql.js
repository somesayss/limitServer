"use strict";

// 依赖
const mysql = require('mysql');

class Connection {
	constructor(props){
		let me = this;
		let state = me.state = {
			host: 'localhost',
		    user: 'root',
		    password: '',
		    database:'',
		    port: 3306
		};
		Object.assign(state, props);
		me.pool = mysql.createPool(state);
	}
	query(query){
		let me = this;
		let pool = me.pool;
		return new Promise((s, j) => {
			pool.getConnection((err, conn) => {
			    if( err ){
			    	j(err);
			    }else{
			    	conn.query(query, (qerr, ...args) => {
			    		conn.release();
			    		if( qerr ){
			    			j(qerr)
			    		}else{
			    			s(...args);
			    		};
			    	});
			    };
			});
		});
	}
	insertData(table, list){
		let me = this;
		let {state} = me;
		return new Promise((s, j) => {
			if( list.length ){
				let keys = Object.keys(list[0]).join(',');
				let vals = list.map( (val) => {
					return Object.values(val).map((val) => {
						return JSON.stringify(val);
					}).join(',');
				} ).map((val) => {
					return `(${val})`;
				}).join(',');
				me.query(`insert into ${table} (${keys}) values ${vals}`).then(s, j);
			}else{
				j('list is empty');
			};
		});
	}
	begin(){
		let me = this;
		return me.query('BEGIN;');
	}
	rollback(){
		let me = this;
		return me.query('ROLLBACK;').then(() => {
			return false;
		});
	}
	commit(){
		let me = this;
		return me.query('COMMIT;').then(() => {
			return true;
		});
	}
	end(){
		let me = this;
		me.pool.end();
	}
};

module.exports = Connection;












